#version 400 core
#extension GL_ARB_shading_language_420pack : require

layout(location = 0) in vec3 pos;
layout(location = 1) in vec3 normal;
layout(location = 2) in vec2 uv;

out vec3 frag_pos_world;
out vec3 normal_world;

layout (std140, binding = 0) uniform Space
{
	mat4 model;
	mat4 vp;
};

void
main()
{
	gl_Position = vp * model * vec4(pos.x, pos.y, pos.z, 1.0);

	//world (http://www.lighthouse3d.com/tutorials/glsl-12-tutorial/the-normal-matrix/) -- calc normal matrix on cpu (revisit)
	frag_pos_world = (model * vec4(pos.x, pos.y, pos.z, 1.0)).xyz;
	normal_world = normalize(mat3(transpose(inverse(model))) * normal);
}