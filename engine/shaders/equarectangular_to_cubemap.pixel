#version 400 core
#extension GL_ARB_shading_language_420pack : require

in vec3 world_pos;
out vec4 frag_color;

uniform sampler2D equirectangular_map;

//this is just vec2(1/2*PI , 1/PI) to convert from radian pitch and yaw of the spherical coord to equirectangular_map uv coord
//(think of the equirectangular_map as a projected sphere onto a plane, read about geographic projection)
const vec2 spherical_to_linear_map = vec2(0.1591, 0.3183);

vec2 sample_spherical_map(vec3 v)
{
	float pitch = atan(v.z, v.x);
	float yaw = asin(v.y);
	vec2 uv = vec2(pitch, yaw);
	uv *= spherical_to_linear_map;
	uv += 0.5;
	return uv;
}

void main()
{
	vec2 uv = sample_spherical_map(normalize(world_pos));
	vec3 color = texture(equirectangular_map, uv).rgb;
	frag_color = vec4(color, 1.0);
}