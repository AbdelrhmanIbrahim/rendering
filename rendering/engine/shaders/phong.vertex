#version 330 core 

layout(location = 0) in vec3 pos;
layout(location = 1) in vec3 normal;
layout(location = 2) in vec2 uv;

uniform mat4 model;
uniform mat4 mvp;

out vec3 frag_world_pos;
out vec3 normal_world;
out vec2 uv_coord;

void main()
{
	gl_Position = mvp * vec4(pos.x, pos.y, pos.z, 1.0);

	//world (http://www.lighthouse3d.com/tutorials/glsl-12-tutorial/the-normal-matrix/) -- calc normal matrix on cpu (revisit)
	frag_world_pos = (model * vec4(pos.x, pos.y, pos.z, 1.0)).xyz;
	normal_world = mat3(transpose(inverse(model))) * normal;
	uv_coord = uv;
}